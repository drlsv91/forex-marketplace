services:
  notification-service:
    build:
      context: .
      dockerfile: apps/notification-service/Dockerfile
    env_file:
      - ./apps/notification-service/.env
    depends_on:
      - redis
      - rabbitmq
  order-service:
    build:
      context: .
      dockerfile: apps/order-service/Dockerfile
    ports:
      - '3005:3005'
    env_file:
      - ./apps/order-service/.env
    depends_on:
      - redis
      - postgres
      - rabbitmq
  rate-service:
    build:
      context: .
      dockerfile: apps/rate-service/Dockerfile
    ports:
      - '3003:3003'
    env_file:
      - ./apps/rate-service/.env
    depends_on:
      - redis
  user-auth-service:
    build:
      context: .
      dockerfile: apps/user-auth-service/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - ./apps/user-auth-service/.env
    depends_on:
      - redis
      - postgres
  wallet-service:
    build:
      context: .
      dockerfile: apps/wallet-service/Dockerfile
    ports:
      - '3001:3001'
    env_file:
      - ./apps/wallet-service/.env
    depends_on:
      - redis
      - postgres

  postgres:
    image: postgres
    container_name: forex_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: forex_password
      POSTGRES_DB: forex_marketplace
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq
    ports:
      - 5672:5672
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

volumes:
  postgres_data:
