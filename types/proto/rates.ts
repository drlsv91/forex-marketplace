// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.3
// source: proto/rates.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "rate";

export interface RatesRequest {
  baseCurrency?: string | undefined;
}

export interface RatesResponse {
  rates: { [key: string]: number };
}

export interface RatesResponse_RatesEntry {
  key: string;
  value: number;
}

export const RATE_PACKAGE_NAME = "rate";

export interface RateServiceClient {
  getRates(request: RatesRequest): Observable<RatesResponse>;
}

export interface RateServiceController {
  getRates(request: RatesRequest): Promise<RatesResponse> | Observable<RatesResponse> | RatesResponse;
}

export function RateServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getRates"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("RateService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("RateService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const RATE_SERVICE_NAME = "RateService";
